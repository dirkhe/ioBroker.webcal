{
  "version": 3,
  "sources": ["../../src/lib/calDav.ts"],
  "sourcesContent": ["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { AdapterInstance } from \"@iobroker/adapter-core\";\nimport { DAVAccount, DAVCalendar, DAVCalendarObject, DAVClient, DAVCredentials } from \"tsdav\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport ICAL from \"ical.js\";\nimport { CalendarEvent, ICalendarTimeRangObj } from \"./calendarManager\";\n\nlet adapter: AdapterInstance;\n\nexport function initLib(adapterInstance: AdapterInstance, localTimeZone: string): void {\n\tadapter = adapterInstance;\n\tICAL.Timezone.localTimezone = new ICAL.Timezone({ tzID: localTimeZone });\n}\nexport class IcalCalendarEvent extends CalendarEvent {\n\ticalEvent?: ICAL.Event;\n\ttimezone?: ICAL.Timezone;\n\trecurIterator?: ICAL.RecurExpansion;\n\n\tconstructor(calendarEventData: string, calendarName: string, startDate: Date, endDate: Date) {\n\t\tsuper(endDate, calendarName);\n\t\ttry {\n\t\t\tadapter.log.debug(\"parse calendar data:\\n\" + calendarEventData.replace(/\\s*([:;=])\\s*/gm, \"$1\"));\n\t\t\tconst jcalData = ICAL.parse(calendarEventData);\n\t\t\tconst comp = new ICAL.Component(jcalData);\n\t\t\tconst calTimezone = comp.getFirstSubcomponent(\"vtimezone\");\n\t\t\tif (calTimezone) {\n\t\t\t\tthis.timezone = new ICAL.Timezone(calTimezone);\n\t\t\t}\n\n\t\t\tthis.icalEvent = new ICAL.Event(comp.getFirstSubcomponent(\"vevent\"));\n\t\t\tthis.summary = this.icalEvent.summary || \"\";\n\t\t\tthis.description = this.icalEvent.description || \"\";\n\n\t\t\tif (this.icalEvent.isRecurring()) {\n\t\t\t\tif (![\"HOURLY\", \"SECONDLY\", \"MINUTELY\"].includes(this.icalEvent.getRecurrenceTypes())) {\n\t\t\t\t\tconst timeObj = this.getNextTimeObj(true);\n\t\t\t\t\tif (timeObj) {\n\t\t\t\t\t\tconst startTime = ICAL.Time.fromData({\n\t\t\t\t\t\t\tyear: startDate.getFullYear(),\n\t\t\t\t\t\t\tmonth: startDate.getMonth() + 1,\n\t\t\t\t\t\t\tday: startDate.getDate(),\n\t\t\t\t\t\t\thour: timeObj.startDate.getHours(),\n\t\t\t\t\t\t\tminute: timeObj.startDate.getMinutes(),\n\t\t\t\t\t\t\ttimezone: calTimezone,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.recurIterator = this.icalEvent.iterator(startTime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tadapter.log.error(\"could not read calendar Event: \" + error);\n\t\t\tadapter.log.debug(calendarEventData);\n\t\t\tthis.icalEvent = null;\n\t\t}\n\t}\n\n\tgetNextTimeObj(isFirstCall: boolean): ICalendarTimeRangObj | null {\n\t\tlet start: ICAL.Time;\n\t\tlet end: ICAL.Time;\n\t\tif (this.recurIterator) {\n\t\t\tstart = this.recurIterator.next();\n\t\t\tif (start) {\n\t\t\t\tif (this.timezone) {\n\t\t\t\t\tstart = start.convertToZone(this.timezone);\n\t\t\t\t}\n\t\t\t\tif (start.toUnixTime() > this.maxUnixTime) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tend = this.icalEvent.getOccurrenceDetails(start).endDate;\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isFirstCall) {\n\t\t\tstart = this.icalEvent.startDate;\n\t\t\tif (this.timezone) {\n\t\t\t\tstart = start.convertToZone(this.timezone);\n\t\t\t}\n\t\t\tend = this.icalEvent.endDate;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.timezone) {\n\t\t\tend = end.convertToZone(this.timezone);\n\t\t}\n\t\treturn {\n\t\t\tstartDate: start.toJSDate(), //.local();\n\t\t\tendDate: end.toJSDate(), //.local();\n\t\t};\n\t}\n\n\tstatic createIcalEventString(data: webcal.ICalendarEventData): string {\n\t\tconst cal = new ICAL.Component([\"vcalendar\", [], []]);\n\t\tcal.updatePropertyWithValue(\"prodid\", \"-//ioBroker.webCal\");\n\t\tconst vevent = new ICAL.Component(\"vevent\");\n\t\tconst event = new ICAL.Event(vevent);\n\n\t\tevent.summary = data.summary;\n\t\tevent.description = \"ioBroker webCal\";\n\t\tevent.uid = new Date().getTime().toString();\n\t\tevent.startDate =\n\t\t\ttypeof data.startDate == \"string\"\n\t\t\t\t? ICAL.Time.fromString(data.startDate)\n\t\t\t\t: ICAL.Time.fromData(data.startDate);\n\t\tif (data.endDate) {\n\t\t\tevent.endDate =\n\t\t\t\ttypeof data.endDate == \"string\" ? ICAL.Time.fromString(data.endDate) : ICAL.Time.fromData(data.endDate);\n\t\t}\n\t\tcal.addSubcomponent(vevent);\n\t\treturn cal.toString();\n\t}\n}\n\nexport class DavCalCalendar implements webcal.ICalendarBase {\n\tname: string;\n\tclient: DAVClient;\n\tignoreSSL = false;\n\tcalendar: DAVCalendar | undefined;\n\n\tconstructor(calConfig: webcal.IConfigCalendar) {\n\t\tthis.name = calConfig.name;\n\t\tconst params: {\n\t\t\tserverUrl: string;\n\t\t\tcredentials: DAVCredentials;\n\t\t\tauthMethod?: \"Basic\" | \"Oauth\";\n\t\t\tdefaultAccountType?: DAVAccount[\"accountType\"] | undefined;\n\t\t} =\n\t\t\tcalConfig.authMethod == \"Oauth\"\n\t\t\t\t? {\n\t\t\t\t\t\tserverUrl: calConfig.serverUrl,\n\t\t\t\t\t\tcredentials: {\n\t\t\t\t\t\t\ttokenUrl: calConfig.tokenUrl,\n\t\t\t\t\t\t\tusername: calConfig.username,\n\t\t\t\t\t\t\trefreshToken: calConfig.refreshToken,\n\t\t\t\t\t\t\tclientId: calConfig.clientId,\n\t\t\t\t\t\t\tclientSecret: calConfig.password,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tauthMethod: calConfig.authMethod,\n\t\t\t\t\t\tdefaultAccountType: \"caldav\",\n\t\t\t\t  }\n\t\t\t\t: {\n\t\t\t\t\t\tserverUrl: calConfig.serverUrl,\n\t\t\t\t\t\tcredentials: {\n\t\t\t\t\t\t\tusername: calConfig.username,\n\t\t\t\t\t\t\tpassword: calConfig.password,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tauthMethod: \"Basic\",\n\t\t\t\t\t\tdefaultAccountType: \"caldav\",\n\t\t\t\t  };\n\t\tthis.client = new DAVClient(params);\n\t\tthis.ignoreSSL = !!calConfig.ignoreSSL;\n\t}\n\n\t/**\n\t * load Calendars from Server\n\t * @param displayName if set, try to return Calendar with this name\n\t * @returns Calender by displaName or last part of initial ServerUrl or first found Calendar\n\t */\n\tprivate async getCalendar(displayName?: string): Promise<DAVCalendar> {\n\t\tif (!this.calendar) {\n\t\t\tif (!this.client.account) {\n\t\t\t\tawait this.client.login();\n\t\t\t}\n\t\t\tconst calendars = await this.client.fetchCalendars();\n\t\t\t//console.log(calendars)\n\t\t\tif (displayName) {\n\t\t\t\tconst displayNameLowerCase = displayName.toLocaleLowerCase();\n\t\t\t\tfor (let i = 0; i < calendars.length; i++) {\n\t\t\t\t\tif (calendars[i].displayName?.toLowerCase() == displayNameLowerCase) {\n\t\t\t\t\t\tthis.calendar = calendars[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < calendars.length; i++) {\n\t\t\t\t\tif (calendars[i].url == this.client.serverUrl) {\n\t\t\t\t\t\tthis.calendar = calendars[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.calendar) {\n\t\t\t\tthis.calendar = calendars[0];\n\t\t\t}\n\t\t}\n\t\treturn this.calendar;\n\t}\n\n\t/**\n\t * fetch Events form Calendar\n\t * @param startDate as date object\n\t * @param endDate as date object\n\t * @returns Array of Calenderobjects\n\t */\n\tprivate async getCalendarObjects(\n\t\tstartDateISOString?: string,\n\t\tendDateISOString?: string,\n\t): Promise<DAVCalendarObject[]> {\n\t\tlet storeDefaultIgnoreSSL: string | undefined | null = null;\n\t\tif (this.ignoreSSL && process.env.NODE_TLS_REJECT_UNAUTHORIZED != \"0\") {\n\t\t\tstoreDefaultIgnoreSSL = process.env.NODE_TLS_REJECT_UNAUTHORIZED;\n\t\t\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n\t\t}\n\t\tconst searchParams: any = {\n\t\t\tcalendar: await this.getCalendar(),\n\t\t};\n\t\tif (startDateISOString) {\n\t\t\tsearchParams.timeRange = {\n\t\t\t\tstart: startDateISOString,\n\t\t\t\tend: endDateISOString || startDateISOString,\n\t\t\t};\n\t\t}\n\t\treturn this.client.fetchCalendarObjects(searchParams).finally(() => {\n\t\t\tif (storeDefaultIgnoreSSL !== null) {\n\t\t\t\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = storeDefaultIgnoreSSL;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * fetch Events form Calendar and pushed them to calEvents Array\n\t * @param calEvents target Array of ICalendarEventBase\n\t * @param startDate as date object\n\t * @param endDate as date object\n\t * @returns null or errorstring\n\t */\n\tloadEvents(calEvents: webcal.ICalendarEventBase[], startDate: Date, endDate: Date): Promise<null | string> {\n\t\treturn this.getCalendarObjects(startDate.toISOString(), endDate.toISOString())\n\t\t\t.then((calendarObjects) => {\n\t\t\t\tif (calendarObjects) {\n\t\t\t\t\tadapter.log.info(\"found \" + calendarObjects.length + \" calendar objects\");\n\t\t\t\t\t/* test for now update ...\n\t\t\t\t\t\t\t\t\t\tconst calEvent = new CalendarEvent(calendarObjects[0].data);\n\t\t\t\t\t\t\t\t\t\tcalEvent.startDate = dayjs().add(1, \"minute\");\n\t\t\t\t\t\t\t\t\t\tcalEvent.endDate = dayjs().add(2, \"minute\");\n\t\t\t\t\t\t\t\t\t\tfor (let evID in this.events) {\n\t\t\t\t\t\t\t\t\t\t\tthis.events[evID].addCalendarEvent(calEvent, calEvent.getDays(startDate));\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tfor (const i in calendarObjects) {\n\t\t\t\t\t\tcalEvents.push(new IcalCalendarEvent(calendarObjects[i].data, this.name, startDate, endDate));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\treturn reason.message;\n\t\t\t});\n\t}\n\n\t/**\n\t * add Event to Calendar\n\t * @param data event data\n\t * @returns Server response, like {ok:boolen}\n\t */\n\tasync addEvent(data: webcal.ICalendarEventData): Promise<any> {\n\t\tlet storeDefaultIgnoreSSL: string | undefined | null = null;\n\t\tif (this.ignoreSSL && process.env.NODE_TLS_REJECT_UNAUTHORIZED != \"0\") {\n\t\t\tstoreDefaultIgnoreSSL = process.env.NODE_TLS_REJECT_UNAUTHORIZED;\n\t\t\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = \"0\";\n\t\t}\n\t\tlet result;\n\t\ttry {\n\t\t\tconst calendarEventData = IcalCalendarEvent.createIcalEventString(data);\n\t\t\tresult = await this.client.createCalendarObject({\n\t\t\t\tcalendar: await this.getCalendar(),\n\t\t\t\tfilename: new Date().getTime() + \".ics\",\n\t\t\t\tiCalString: calendarEventData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tresult = {\n\t\t\t\tok: false,\n\t\t\t\tmessage: error,\n\t\t\t};\n\t\t}\n\t\tif (storeDefaultIgnoreSSL !== null) {\n\t\t\tprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = storeDefaultIgnoreSSL;\n\t\t}\n\t\t//console.log(result);\n\t\t//console.log(result.ok);\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ICAL"]
}
