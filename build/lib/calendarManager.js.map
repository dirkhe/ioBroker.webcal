{
  "version": 3,
  "sources": ["../../src/lib/calendarManager.ts"],
  "sourcesContent": ["import { AdapterInstance } from \"@iobroker/adapter-core\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport dayjs_timezone from \"dayjs/plugin/timezone\";\nimport dayjs_utc from \"dayjs/plugin/utc\";\nimport { Event } from \"./eventManager\";\nimport { DavCal } from \"./tsdav\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport ICAL from \"ical.js\";\n\ndayjs.extend(dayjs_timezone);\ndayjs.extend(dayjs_utc);\nconst localTimeZone = dayjs.tz.guess();\ndayjs.tz.setDefault(localTimeZone);\nICAL.Timezone.localTimezone = new ICAL.Timezone({ tzID: localTimeZone });\n\nlet adapter: AdapterInstance;\nlet i18n: Record<string, string> = {};\n\nexport class CalendarEvent {\n\tstatic daysFuture = 3;\n\tstatic daysPast = 0;\n\tstatic todayMidnight: Dayjs = dayjs().startOf(\"d\");\n\ticalEvent?: ICAL.Event;\n\ttimezone?: ICAL.Timezone;\n\trecurIterator?: ICAL.RecurExpansion;\n\tmaxUnixTime: number;\n\n\tconstructor(calendarEventData: string, startDate: Dayjs, endDate: Dayjs) {\n\t\tthis.maxUnixTime = endDate.unix();\n\t\ttry {\n\t\t\tadapter.log.debug(\"parse calendar data:\\n\" + calendarEventData.replace(/\\s*([:;=])\\s*/gm, \"$1\"));\n\t\t\tconst jcalData = ICAL.parse(calendarEventData);\n\t\t\tconst comp = new ICAL.Component(jcalData);\n\t\t\tconst calTimezone = comp.getFirstSubcomponent(\"vtimezone\");\n\t\t\tif (calTimezone) {\n\t\t\t\tthis.timezone = new ICAL.Timezone(calTimezone);\n\t\t\t}\n\n\t\t\tthis.icalEvent = new ICAL.Event(comp.getFirstSubcomponent(\"vevent\"));\n\n\t\t\tif (this.icalEvent.isRecurring()) {\n\t\t\t\tif (![\"HOURLY\", \"SECONDLY\", \"MINUTELY\"].includes(this.icalEvent.getRecurrenceTypes())) {\n\t\t\t\t\tconst timeObj = this.getNextTimeObj(true);\n\t\t\t\t\tif (timeObj) {\n\t\t\t\t\t\tconst startTime = ICAL.Time.fromData({\n\t\t\t\t\t\t\tyear: startDate.year(),\n\t\t\t\t\t\t\tmonth: startDate.month() + 1,\n\t\t\t\t\t\t\tday: startDate.date(),\n\t\t\t\t\t\t\thour: timeObj.start.hour(),\n\t\t\t\t\t\t\tminute: timeObj.start.minute(),\n\t\t\t\t\t\t\ttimezone: calTimezone,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.recurIterator = this.icalEvent.iterator(startTime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tadapter.log.error(\"could not read calendar Event: \" + error);\n\t\t\tadapter.log.debug(calendarEventData);\n\t\t\tthis.icalEvent = null;\n\t\t}\n\t}\n\n\tgetNextTimeObj(isFirstCall: boolean): webcal.IEventTimeRangObj | null {\n\t\tlet start: ICAL.Time;\n\t\tlet end: ICAL.Time;\n\t\tif (this.recurIterator) {\n\t\t\tstart = this.recurIterator.next();\n\t\t\tif (start) {\n\t\t\t\tif (this.timezone) {\n\t\t\t\t\tstart = start.convertToZone(this.timezone);\n\t\t\t\t}\n\t\t\t\tif (start.toUnixTime() > this.maxUnixTime) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tend = this.icalEvent.getOccurrenceDetails(start).endDate;\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isFirstCall) {\n\t\t\tstart = this.icalEvent.startDate;\n\t\t\tif (this.timezone) {\n\t\t\t\tstart = start.convertToZone(this.timezone);\n\t\t\t}\n\t\t\tend = this.icalEvent.endDate;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.timezone) {\n\t\t\tend = end.convertToZone(this.timezone);\n\t\t}\n\t\treturn {\n\t\t\tstart: dayjs(start.toJSDate()), //.local();\n\t\t\tend: dayjs(end.toJSDate()), //.local();\n\t\t};\n\t}\n\n\tsearchForEvents(events: Record<string, Event>): void {\n\t\tif (!this.icalEvent) {\n\t\t\treturn;\n\t\t}\n\t\tconst content = (this.icalEvent.summary || \"\") + (this.icalEvent.description || \"\");\n\t\tif (content.length) {\n\t\t\tadapter.log.debug(\n\t\t\t\t\"check calendar event \" + (this.icalEvent.summary || \"\") + \" \" + (this.icalEvent.description || \"\"),\n\t\t\t);\n\t\t\tconst eventHits = [];\n\t\t\tfor (const evID in events) {\n\t\t\t\tconst event = events[evID];\n\t\t\t\tif (event.checkCalendarContent(content)) {\n\t\t\t\t\tadapter.log.debug(\"  found event '\" + event.name + \"' in calendar event \");\n\t\t\t\t\teventHits.push(event);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (eventHits.length > 0) {\n\t\t\t\tlet timeObj = this.getNextTimeObj(true);\n\t\t\t\twhile (timeObj) {\n\t\t\t\t\tconst days: Record<number, string> = this.calcDays(timeObj);\n\t\t\t\t\tfor (let e = 0; e < eventHits.length; e++) {\n\t\t\t\t\t\teventHits[e].addCalendarEvent(timeObj, days);\n\t\t\t\t\t}\n\t\t\t\t\ttimeObj = this.getNextTimeObj(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcalcDays(timeObj: webcal.IEventTimeRangObj): Record<number, string> {\n\t\tconst days: Record<number, string> = {};\n\t\tif (timeObj) {\n\t\t\tconst firstDay = Math.max(\n\t\t\t\ttimeObj.start.startOf(\"D\").diff(CalendarEvent.todayMidnight, \"d\"),\n\t\t\t\t-CalendarEvent.daysPast,\n\t\t\t);\n\t\t\tconst lastDay = Math.min(\n\t\t\t\ttimeObj.end.startOf(\"D\").diff(CalendarEvent.todayMidnight, \"d\"),\n\t\t\t\tCalendarEvent.daysFuture,\n\t\t\t);\n\t\t\tif (lastDay > firstDay) {\n\t\t\t\t// event is at least next day\n\t\t\t\tlet d: number = firstDay;\n\t\t\t\tlet time = timeObj.start.format(\" HH:mm\");\n\t\t\t\tif (time != \" 00:00\") {\n\t\t\t\t\tdays[d++] = i18n[\"from\"] + time;\n\t\t\t\t}\n\t\t\t\tfor (; d < lastDay; d++) {\n\t\t\t\t\tdays[d] = i18n[\"all day\"];\n\t\t\t\t}\n\t\t\t\ttime = timeObj.end.format(\" HH:mm\");\n\t\t\t\tif (time == \" 23:59\") {\n\t\t\t\t\tdays[lastDay] = i18n[\"all day\"];\n\t\t\t\t} else if (time != \" 00:00\") {\n\t\t\t\t\tdays[lastDay] = i18n[\"until\"] + \" -\" + time;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdays[firstDay] = timeObj.start.format(\"HH:mm\");\n\t\t\t}\n\t\t\tadapter.log.debug(\"days for calendar event(\" + JSON.stringify(timeObj) + \"): \" + JSON.stringify(days));\n\t\t}\n\t\treturn days;\n\t}\n\n\tstatic parseDateTime(dateString: string): ICAL.Time {\n\t\tconst dateTimeObj = {\n\t\t\t// first we use year, minute and day numbers as index\n\t\t\tyear: 0,\n\t\t\tmonth: 1,\n\t\t\tday: 2,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tisDate: false,\n\t\t};\n\n\t\tconst terms = dateString.split(/[.\\/T :-]/);\n\t\tif (terms.length > 2) {\n\t\t\tif (terms[0].length != 4) {\n\t\t\t\tdateTimeObj.year = 2;\n\t\t\t\tif (dateString[2] == \".\") {\n\t\t\t\t\tdateTimeObj.day = 0;\n\t\t\t\t\tdateTimeObj.month = 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (parseInt(terms[0], 10) > 12) {\n\t\t\t\t\t\tdateTimeObj.day = 0;\n\t\t\t\t\t\tdateTimeObj.month = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdateTimeObj.month = 0;\n\t\t\t\t\t\tdateTimeObj.day = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // else terms[0].length == 4 -> use default index\n\t\t\tdateTimeObj.year = parseInt(terms[dateTimeObj.year], 10);\n\t\t\tdateTimeObj.month = parseInt(terms[dateTimeObj.month], 10);\n\t\t\tdateTimeObj.day = parseInt(terms[dateTimeObj.day], 10);\n\t\t\tif (terms.length > 4) {\n\t\t\t\tdateTimeObj.hour = parseInt(terms[3], 10);\n\t\t\t\tdateTimeObj.minute = parseInt(terms[4], 10);\n\t\t\t\tif (dateTimeObj.hour < 12 && terms.length > 5) {\n\t\t\t\t\tconst hour12 = terms[5] + (terms.length > 6 ? terms[6] : \"\");\n\t\t\t\t\tif (hour12.toLocaleLowerCase() == \"pm\") {\n\t\t\t\t\t\tdateTimeObj.hour += 12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdateTimeObj.isDate = true;\n\t\t\t}\n\t\t\tif (dateTimeObj.year < 100) {\n\t\t\t\tdateTimeObj.year += 2000;\n\t\t\t}\n\t\t}\n\t\treturn ICAL.Time.fromData(dateTimeObj);\n\t}\n\n\tstatic createIcalEventString(data: webcal.ICalEventData): string {\n\t\tconst cal = new ICAL.Component([\"vcalendar\", [], []]);\n\t\tcal.updatePropertyWithValue(\"prodid\", \"-//ioBroker.webCal\");\n\t\tconst vevent = new ICAL.Component(\"vevent\");\n\t\tconst event = new ICAL.Event(vevent);\n\n\t\tevent.summary = data.summary;\n\t\tevent.description = \"ioBroker webCal\";\n\t\tevent.uid = new Date().getTime().toString();\n\t\tevent.startDate = typeof data.startDate == \"string\" ? ICAL.Time.fromString(data.startDate) : data.startDate;\n\t\tif (data.endDate) {\n\t\t\tevent.endDate = typeof data.endDate == \"string\" ? ICAL.Time.fromString(data.endDate) : data.endDate;\n\t\t}\n\t\tcal.addSubcomponent(vevent);\n\t\treturn cal.toString();\n\t}\n}\n\nexport class CalendarManager {\n\tcalendars: Record<string, DavCal>;\n\tdefaultCalendar: DavCal | null = null;\n\n\tconstructor(adapterInstance: AdapterInstance, i18nInstance: any) {\n\t\tadapter = adapterInstance;\n\t\ti18n = i18nInstance;\n\t\tthis.calendars = {};\n\t}\n\n\tinit(config: ioBroker.AdapterConfig): boolean {\n\t\tCalendarEvent.daysFuture = Math.max(config.daysEventFuture || 0, config.daysJSONFuture || 0);\n\t\tCalendarEvent.daysPast = Math.max(config.daysEventPast || 0, config.daysJSONPast || 0);\n\t\t// init all calendars\n\t\tif (config.calendars) {\n\t\t\tfor (let c = 0; c < config.calendars.length; c++) {\n\t\t\t\tconst davCal = CalendarManager.createDavCalFromConfig(config.calendars[c]);\n\t\t\t\tif (davCal) {\n\t\t\t\t\tthis.calendars[config.calendars[c].name] = davCal;\n\t\t\t\t\tif (!this.defaultCalendar) {\n\t\t\t\t\t\tthis.defaultCalendar = davCal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.defaultCalendar != null;\n\t}\n\n\tstatic createDavCalFromConfig(calConfig: webcal.IConfigCalendar): DavCal | null {\n\t\tif (calConfig.serverUrl) {\n\t\t\tconst credentials =\n\t\t\t\tcalConfig.authMethod == \"Oauth\"\n\t\t\t\t\t? {\n\t\t\t\t\t\t\ttokenUrl: calConfig.tokenUrl,\n\t\t\t\t\t\t\tusername: calConfig.username,\n\t\t\t\t\t\t\trefreshToken: calConfig.refreshToken,\n\t\t\t\t\t\t\tclientId: calConfig.clientId,\n\t\t\t\t\t\t\tclientSecret: calConfig.password,\n\t\t\t\t\t  }\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tusername: calConfig.username,\n\t\t\t\t\t\t\tpassword: calConfig.password,\n\t\t\t\t\t  };\n\n\t\t\treturn new DavCal(\n\t\t\t\t{\n\t\t\t\t\tserverUrl: calConfig.serverUrl,\n\t\t\t\t\tcredentials: credentials,\n\t\t\t\t\tauthMethod: calConfig.authMethod,\n\t\t\t\t\tdefaultAccountType: \"caldav\",\n\t\t\t\t},\n\t\t\t\tcalConfig.ignoreSSL,\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * get data from all calendars\n\t * @returns Array of CalendarEvents\n\t */\n\tasync fetchCalendars(): Promise<CalendarEvent[]> {\n\t\tCalendarEvent.todayMidnight = dayjs().startOf(\"D\");\n\t\tconst calEvents: CalendarEvent[] = [];\n\t\tconst startDate: Dayjs = CalendarEvent.todayMidnight.add(-CalendarEvent.daysPast, \"d\");\n\t\tconst endDate: Dayjs = CalendarEvent.todayMidnight.add(CalendarEvent.daysFuture, \"d\").endOf(\"D\");\n\t\tfor (const c in this.calendars) {\n\t\t\ttry {\n\t\t\t\tconst calendarObjects = await this.calendars[c].getEvents(\n\t\t\t\t\tstartDate.toISOString(),\n\t\t\t\t\tendDate.toISOString(),\n\t\t\t\t);\n\t\t\t\tif (calendarObjects) {\n\t\t\t\t\tadapter.log.info(\"found \" + calendarObjects.length + \" calendar objects\");\n\t\t\t\t\t/* test for now update ...\n\t\t\t\t\t\t\t\t\t\tconst calEvent = new CalendarEvent(calendarObjects[0].data);\n\t\t\t\t\t\t\t\t\t\tcalEvent.startDate = dayjs().add(1, \"minute\");\n\t\t\t\t\t\t\t\t\t\tcalEvent.endDate = dayjs().add(2, \"minute\");\n\t\t\t\t\t\t\t\t\t\tfor (let evID in this.events) {\n\t\t\t\t\t\t\t\t\t\t\tthis.events[evID].addCalendarEvent(calEvent, calEvent.getDays(startDate));\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tfor (const i in calendarObjects) {\n\t\t\t\t\t\tcalEvents.push(new CalendarEvent(calendarObjects[i].data, startDate, endDate));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tadapter.log.error(\"could not fetch Calendar \" + c + \": \" + error);\n\t\t\t}\n\t\t}\n\t\treturn calEvents;\n\t}\n\n\t/**\n\t * create new Event in calendar\n\t * @param data\n\t * @param calendarName optional name of calendar, otherwise default calender is used\n\t * @returns Response Object\n\t */\n\tasync addEvent(\n\t\tdata: webcal.ICalEventData,\n\t\tcalendarName?: string,\n\t): Promise<{ ok: boolean; statusText: string; errNo: number }> {\n\t\tconst calendar = calendarName ? this.calendars[calendarName] : this.defaultCalendar;\n\t\tif (!calendar) {\n\t\t\treturn { statusText: i18n[\"could not found calendar for\"] + calendarName, errNo: 1, ok: false };\n\t\t}\n\t\tadapter.log.debug(\"add Event \" + JSON.stringify(data));\n\t\tconst calendarEventData = CalendarEvent.createIcalEventString(data);\n\t\treturn calendar.addEvent(calendarEventData);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["dayjs", "dayjs_timezone", "dayjs_utc", "ICAL"]
}
