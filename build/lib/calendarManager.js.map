{
  "version": 3,
  "sources": ["../../src/lib/calendarManager.ts"],
  "sourcesContent": ["import { AdapterInstance } from \"@iobroker/adapter-core\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport dayjs_timezone from \"dayjs/plugin/timezone\";\nimport dayjs_utc from \"dayjs/plugin/utc\";\nimport { Event } from \"./eventManager\";\n\ndayjs.extend(dayjs_timezone);\ndayjs.extend(dayjs_utc);\nexport const localTimeZone = dayjs.tz.guess();\ndayjs.tz.setDefault(localTimeZone);\n\nlet adapter: AdapterInstance;\nlet i18n: Record<string, string> = {};\n\nexport interface ICalendarTimeRangObj {\n\tstartDate: Date;\n\tendDate: Date;\n}\n\nexport class jsonEvent {\n\tdate: Date;\n\tstartTime?: string;\n\tendTime?: string;\n\tcalendarName: string;\n\tsummary?: string;\n\n\tconstructor(calendarName: string, date: Date, summary?: string, startTime?: string, endTime?: string) {\n\t\tthis.calendarName = calendarName;\n\t\tthis.summary = summary;\n\t\tthis.date = date;\n\t\tthis.startTime = startTime;\n\t\tthis.endTime = endTime;\n\t}\n\n\ttoString(): string {\n\t\treturn this.isAllday()\n\t\t\t? i18n.allDay\n\t\t\t: i18n[\"from\"] + \" \" + this.startTime + (this.endTime ? \" \" + i18n[\"until\"] + \" \" + this.endTime : \"\");\n\t}\n\tisAllday(): boolean {\n\t\treturn !this.startTime && !this.endTime;\n\t}\n}\nexport abstract class CalendarEvent implements webcal.ICalendarEventBase {\n\tstatic daysFuture = 3;\n\tstatic daysPast = 0;\n\tstatic todayMidnight: Dayjs = dayjs().startOf(\"d\");\n\tcalendarName: string;\n\tmaxUnixTime: number;\n\tsummary?: string;\n\tdescription?: string;\n\n\tconstructor(endDate: Date, calendarName: string) {\n\t\tthis.calendarName = calendarName;\n\t\tthis.maxUnixTime = dayjs(endDate).unix();\n\t}\n\n\tabstract getNextTimeObj(isFirstCall: boolean): ICalendarTimeRangObj | null;\n\n\tsearchForEvents(events: Record<string, Event>): void {\n\t\tconst content = (this.summary || \"\") + (this.description || \"\");\n\t\tif (content.length) {\n\t\t\tadapter.log.debug(\"check calendar event \" + (this.summary || \"\") + \" \" + (this.description || \"\"));\n\t\t\tconst eventHits = [];\n\t\t\tfor (const evID in events) {\n\t\t\t\tconst event = events[evID];\n\t\t\t\tif (event.checkCalendarContent(content)) {\n\t\t\t\t\tadapter.log.debug(\"  found event '\" + event.name + \"' in calendar event \");\n\t\t\t\t\teventHits.push(event);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (eventHits.length > 0) {\n\t\t\t\tlet timeObj = this.getNextTimeObj(true);\n\t\t\t\twhile (timeObj) {\n\t\t\t\t\tconst evTimeObj = {\n\t\t\t\t\t\tstart: dayjs(timeObj.startDate),\n\t\t\t\t\t\tend: dayjs(timeObj.endDate),\n\t\t\t\t\t};\n\t\t\t\t\tconst days: Record<number, jsonEvent> = this.calcDays(evTimeObj);\n\t\t\t\t\tfor (let e = 0; e < eventHits.length; e++) {\n\t\t\t\t\t\teventHits[e].addCalendarEvent(days);\n\t\t\t\t\t}\n\t\t\t\t\ttimeObj = this.getNextTimeObj(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcalcDays(timeObj: webcal.IEventTimeRangObj): Record<number, jsonEvent> {\n\t\tconst days: Record<number, jsonEvent> = {};\n\t\tif (timeObj) {\n\t\t\tconst firstDay = Math.max(\n\t\t\t\ttimeObj.start.startOf(\"D\").diff(CalendarEvent.todayMidnight, \"d\"),\n\t\t\t\t-CalendarEvent.daysPast,\n\t\t\t);\n\t\t\tif (!timeObj.start.isSame(timeObj.end)) {\n\t\t\t\t//(lastDay >= firstDay) {\n\t\t\t\tconst lastDay = Math.min(\n\t\t\t\t\ttimeObj.end.startOf(\"D\").diff(CalendarEvent.todayMidnight, \"d\"),\n\t\t\t\t\tCalendarEvent.daysFuture,\n\t\t\t\t);\n\t\t\t\t// event is at least next day\n\t\t\t\tlet d: number = firstDay;\n\t\t\t\tlet time = timeObj.start.format(\"HH:mm\");\n\t\t\t\tif (time != \"00:00\") {\n\t\t\t\t\tdays[d++] = new jsonEvent(this.calendarName, timeObj.start.toDate(), this.summary, time);\n\t\t\t\t}\n\t\t\t\tfor (; d < lastDay; d++) {\n\t\t\t\t\tdays[d] = new jsonEvent(\n\t\t\t\t\t\tthis.calendarName,\n\t\t\t\t\t\ttimeObj.start.add(d - firstDay, \"d\").toDate(),\n\t\t\t\t\t\tthis.summary,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\ttime = timeObj.end.format(\"HH:mm\");\n\t\t\t\tif (time == \"23:59\") {\n\t\t\t\t\tdays[lastDay] = new jsonEvent(this.calendarName, timeObj.end.toDate(), this.summary);\n\t\t\t\t} else if (time != \"00:00\") {\n\t\t\t\t\tdays[lastDay].endTime = time;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdays[firstDay] = new jsonEvent(\n\t\t\t\t\tthis.calendarName,\n\t\t\t\t\ttimeObj.start.toDate(),\n\t\t\t\t\tthis.summary,\n\t\t\t\t\ttimeObj.start.format(\"HH:mm\"),\n\t\t\t\t);\n\t\t\t}\n\t\t\tadapter.log.debug(\"days for calendar event(\" + JSON.stringify(timeObj) + \"): \" + JSON.stringify(days));\n\t\t}\n\t\treturn days;\n\t}\n\n\tstatic parseDateTime(dateString: string): webcal.IEventDateTime {\n\t\tconst dateTimeObj: webcal.IEventDateTime = {\n\t\t\t// first we use year, minute and day numbers as index\n\t\t\tyear: 0,\n\t\t\tmonth: 1,\n\t\t\tday: 2,\n\t\t\thour: 0,\n\t\t\tminute: 0,\n\t\t\tsecond: 0,\n\t\t\tisDate: false,\n\t\t};\n\n\t\tconst terms = dateString.split(/[.\\/T :-]/);\n\t\tif (terms.length > 2) {\n\t\t\tif (terms[0].length != 4) {\n\t\t\t\tdateTimeObj.year = 2;\n\t\t\t\tif (dateString[2] == \".\") {\n\t\t\t\t\tdateTimeObj.day = 0;\n\t\t\t\t\tdateTimeObj.month = 1;\n\t\t\t\t} else {\n\t\t\t\t\tif (parseInt(terms[0], 10) > 12) {\n\t\t\t\t\t\tdateTimeObj.day = 0;\n\t\t\t\t\t\tdateTimeObj.month = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdateTimeObj.month = 0;\n\t\t\t\t\t\tdateTimeObj.day = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // else terms[0].length == 4 -> use default index\n\t\t\tdateTimeObj.year = parseInt(terms[dateTimeObj.year], 10);\n\t\t\tdateTimeObj.month = parseInt(terms[dateTimeObj.month], 10);\n\t\t\tdateTimeObj.day = parseInt(terms[dateTimeObj.day], 10);\n\t\t\tif (terms.length > 4) {\n\t\t\t\tdateTimeObj.hour = parseInt(terms[3], 10);\n\t\t\t\tdateTimeObj.minute = parseInt(terms[4], 10);\n\t\t\t\tif (dateTimeObj.hour < 12 && terms.length > 5) {\n\t\t\t\t\tconst hour12 = terms[5] + (terms.length > 6 ? terms[6] : \"\");\n\t\t\t\t\tif (hour12.toLocaleLowerCase() == \"pm\") {\n\t\t\t\t\t\tdateTimeObj.hour += 12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdateTimeObj.isDate = true;\n\t\t\t}\n\t\t\tif (dateTimeObj.year < 100) {\n\t\t\t\tdateTimeObj.year += 2000;\n\t\t\t}\n\t\t}\n\t\treturn dateTimeObj;\n\t}\n\n\tstatic getDateTimeISOStringFromEventDateTime(date: webcal.IEventDateTime): string {\n\t\tif (!date.isDate) {\n\t\t\treturn new Date(date.year, date.month - 1, date.day, date.hour, date.minute, date.second).toISOString();\n\t\t}\n\t\treturn new String(\"20\" + date.year)\n\t\t\t.slice(-4)\n\t\t\t.concat(\"-\", new String(\"0\" + date.month).slice(-2), \"-\", new String(\"0\" + date.day).slice(-2));\n\t}\n}\n\nexport class CalendarManager {\n\tcalendars: Record<string, webcal.ICalendarBase>;\n\tdefaultCalendar: webcal.ICalendarBase | null = null;\n\n\tconstructor(adapterInstance: AdapterInstance, i18nInstance: any) {\n\t\tadapter = adapterInstance;\n\t\ti18n = i18nInstance;\n\t\tthis.calendars = {};\n\t}\n\n\tinit(config: ioBroker.AdapterConfig): void {\n\t\tCalendarEvent.daysFuture = Math.max(config.daysEventFuture || 0, config.daysJSONFuture || 0);\n\t\tCalendarEvent.daysPast = Math.max(config.daysEventPast || 0, config.daysJSONPast || 0);\n\t}\n\n\taddCalendar(cal: webcal.ICalendarBase | null, name: string): void {\n\t\tif (cal) {\n\t\t\tthis.calendars[name] = cal;\n\t\t\tif (!this.defaultCalendar) {\n\t\t\t\tthis.defaultCalendar = cal;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get data from all calendars\n\t * @returns Array of CalendarEvents\n\t */\n\tasync fetchCalendars(): Promise<CalendarEvent[]> {\n\t\tCalendarEvent.todayMidnight = dayjs().startOf(\"D\");\n\t\tconst calEvents: CalendarEvent[] = [];\n\t\tconst startDate: Date = CalendarEvent.todayMidnight.add(-CalendarEvent.daysPast, \"d\").toDate();\n\t\tconst endDate: Date = CalendarEvent.todayMidnight.add(CalendarEvent.daysFuture, \"d\").endOf(\"D\").toDate();\n\t\tfor (const c in this.calendars) {\n\t\t\tconst error = await this.calendars[c].loadEvents(calEvents, startDate, endDate);\n\t\t\tif (error) {\n\t\t\t\tadapter.log.error(\"could not fetch Calendar \" + c + \": \" + error);\n\t\t\t}\n\t\t}\n\t\treturn calEvents;\n\t}\n\n\t/**\n\t * create new Event in calendar\n\t * @param data\n\t * @param calendarName optional name of calendar, otherwise default calender is used\n\t * @returns Response Object\n\t */\n\tasync addEvent(\n\t\tdata: webcal.ICalendarEventData,\n\t\tcalendarName?: string,\n\t): Promise<{ ok: boolean; message: string; errNo: number }> {\n\t\tconst calendar = calendarName ? this.calendars[calendarName] : this.defaultCalendar;\n\t\tif (!calendar) {\n\t\t\treturn { message: i18n.couldNotFoundCalendar + calendarName, errNo: 1, ok: false };\n\t\t}\n\t\tadapter.log.debug(\"add Event to \" + calendar.name + \": \" + JSON.stringify(data));\n\t\treturn calendar.addEvent(data);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["dayjs", "dayjs_timezone", "dayjs_utc"]
}
