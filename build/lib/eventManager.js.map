{
  "version": 3,
  "sources": ["../../src/lib/eventManager.ts"],
  "sourcesContent": ["import { AdapterInstance } from \"@iobroker/adapter-core\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport RegExpEscape from \"regex-escape\";\n\nlet adapter: AdapterInstance;\nlet i18n: Record<string, string> = {};\n\nexport class Event {\n\tstatic namespace = \"events.\";\n\tstatic daysFuture = 3;\n\tstatic daysPast = 0;\n\tid: string;\n\tname: string;\n\tregEx: RegExp;\n\tstateValues: Record<number, Array<string>> = {};\n\tnowFlag: {\n\t\ttimes: Array<webcal.IEventTimeRangObj>;\n\t\ttimerID: NodeJS.Timeout | null;\n\t\tallDay: boolean;\n\t} | null = null;\n\n\tconstructor(config: webcal.IConfigEvent) {\n\t\tthis.name = config.name;\n\t\tthis.id = this.name.replace(/[^a-z0-9_-]/gi, \"\");\n\t\tthis.regEx = new RegExp(config.regEx || RegExpEscape(config.name), \"i\");\n\t}\n\n\tcheckCalendarContent(content: string): boolean {\n\t\treturn this.regEx.test(content);\n\t}\n\n\taddCalendarEvent(timeObj: webcal.IEventTimeRangObj, days: Record<number, string>): void {\n\t\tif (!timeObj.start) {\n\t\t\treturn;\n\t\t}\n\t\tlet values;\n\t\tfor (const d in days) {\n\t\t\tconst day: number = d as unknown as number;\n\t\t\tif (day >= Event.daysPast && day <= Event.daysFuture) {\n\t\t\t\tvalues = this.stateValues[day];\n\t\t\t\tif (!values) {\n\t\t\t\t\tvalues = this.stateValues[day] = [];\n\t\t\t\t}\n\t\t\t\tvalues.push(days[day]);\n\t\t\t}\n\t\t}\n\t\tadapter.log.debug(\"days for event \" + this.name + \": \" + JSON.stringify(this.stateValues));\n\t\tif (days[0]) {\n\t\t\t// we have a hit today\n\t\t\tif (this.nowFlag && days[0] != i18n[\"all day\"]) {\n\t\t\t\tif (!this.nowFlag.allDay) {\n\t\t\t\t\tlet curTime = null;\n\t\t\t\t\tfor (let i = 0; curTime == null && i < this.nowFlag.times.length; i++) {\n\t\t\t\t\t\tcurTime = this.nowFlag.times[i];\n\t\t\t\t\t\tif (timeObj.start.isBefore(curTime.start)) {\n\t\t\t\t\t\t\tif (timeObj.end.isBefore(curTime.start)) {\n\t\t\t\t\t\t\t\t// hole timeframe is befor cur timeframe, so we insert it as new item\n\t\t\t\t\t\t\t\tthis.nowFlag.times.splice(i, 0, {\n\t\t\t\t\t\t\t\t\tstart: timeObj.start,\n\t\t\t\t\t\t\t\t\tend: timeObj.end,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// we will start earlier\n\t\t\t\t\t\t\t\tcurTime.start = timeObj.start;\n\t\t\t\t\t\t\t\tif (timeObj.end.isAfter(curTime.end)) {\n\t\t\t\t\t\t\t\t\t// the endtime is later then cur timeframe, so we stopps later\n\t\t\t\t\t\t\t\t\tcurTime.end = timeObj.end;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (timeObj.start.isSame(curTime.start) || timeObj.start.isBefore(curTime.end)) {\n\t\t\t\t\t\t\tif (timeObj.end.isAfter(curTime.end)) {\n\t\t\t\t\t\t\t\t// the endtime is later then cur timeframe, so we stopps later\n\t\t\t\t\t\t\t\tcurTime.end = timeObj.end;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurTime = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (curTime == null) {\n\t\t\t\t\t\tthis.nowFlag.times.push({\n\t\t\t\t\t\t\tstart: timeObj.start,\n\t\t\t\t\t\t\tend: timeObj.end,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// first entry\n\t\t\t\tthis.nowFlag = {\n\t\t\t\t\ttimes: [],\n\t\t\t\t\ttimerID: null,\n\t\t\t\t\tallDay: days[0] == i18n[\"all day\"],\n\t\t\t\t};\n\t\t\t\tif (!this.nowFlag.allDay) {\n\t\t\t\t\tthis.nowFlag.times.push({ start: timeObj.start, end: timeObj.end });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treset(): void {\n\t\tthis.stateValues = {};\n\t\tif (this.nowFlag && this.nowFlag.timerID) {\n\t\t\tclearTimeout(this.nowFlag.timerID);\n\t\t}\n\t\tthis.nowFlag = null;\n\t}\n\n\tsyncFlags(): void {\n\t\tadapter.getStatesAsync(Event.namespace + this.id + \".*\").then((states) => {\n\t\t\tif (states) {\n\t\t\t\tfor (const stateId in states) {\n\t\t\t\t\tconst evID = parseInt(stateId.split(\".\").pop() || \"0\", 10);\n\t\t\t\t\tif (!isNaN(evID)) {\n\t\t\t\t\t\t// its a number, so it will be a day state\n\t\t\t\t\t\tadapter.setStateChangedAsync(stateId, (this.stateValues[evID] || []).join(\", \"), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.updateNowFlag();\n\t}\n\n\tupdateNowFlag(): void {\n\t\tlet stateText = \"\";\n\t\tif (this.nowFlag) {\n\t\t\tif (this.nowFlag.timerID != null) {\n\t\t\t\tclearTimeout(this.nowFlag.timerID);\n\t\t\t\tthis.nowFlag.timerID = null;\n\t\t\t}\n\t\t\tif (this.nowFlag.allDay) {\n\t\t\t\tstateText = i18n[\"all day\"];\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < this.nowFlag.times.length; i++) {\n\t\t\t\t\tconst timeUntilStart = this.nowFlag.times[i].start.diff();\n\t\t\t\t\tconst timerUntilStop = this.nowFlag.times[i].end.diff();\n\t\t\t\t\tif (timeUntilStart <= 0 && timerUntilStop > 0) {\n\t\t\t\t\t\t// starttime is in the past and endTime is in the future\n\t\t\t\t\t\tstateText = this.nowFlag.times[i].start.format(\"HH:mm\");\n\t\t\t\t\t\tthis.nowFlag.timerID = setTimeout(\n\t\t\t\t\t\t\tfunction (event) {\n\t\t\t\t\t\t\t\tevent.updateNowFlag();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttimerUntilStop,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (timeUntilStart > 0) {\n\t\t\t\t\t\t\t// starttime is in the future\n\t\t\t\t\t\t\tthis.nowFlag.timerID = setTimeout(\n\t\t\t\t\t\t\t\tfunction (event) {\n\t\t\t\t\t\t\t\t\tevent.updateNowFlag();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttimeUntilStart,\n\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tadapter.setStateChangedAsync(Event.namespace + this.id + \".now\", stateText, true);\n\t}\n}\n\nexport class EventManager {\n\tevents: Record<string, Event>;\n\n\tconstructor(adapterInstance: AdapterInstance, i18nInstance: any) {\n\t\tadapter = adapterInstance;\n\t\ti18n = i18nInstance;\n\t\tthis.events = {};\n\t\tEvent.namespace = adapter.namespace + \".\" + Event.namespace;\n\t}\n\n\tinit(config: ioBroker.AdapterConfig): void {\n\t\tadapter.log.info(\"init events\");\n\t\tEvent.daysFuture = config.daysEventFuture;\n\t\tEvent.daysPast = config.daysEventPast;\n\t\t// init all Events\n\t\tfor (let i = 0; i < config.events.length; i++) {\n\t\t\tconst event = new Event(config.events[i]);\n\t\t\tthis.events[event.id] = event;\n\t\t}\n\t\tthis.syncEventStateObjects();\n\t}\n\n\t/**\n\t * create/update/delete all Event State objects based on config\n\t */\n\tsyncEventStateObjects(): void {\n\t\tconst allEventIDs: Record<string, boolean> = {};\n\t\tfor (const evID in this.events) {\n\t\t\tallEventIDs[evID] = true;\n\t\t}\n\n\t\tconst eventFlags: Record<string, string> = {\n\t\t\tnow: i18n[\"now\"],\n\t\t\taddEvent: i18n[\"add Event\"],\n\t\t\t\"0\": i18n[\"today\"],\n\t\t};\n\t\tfor (let d = 1; d <= Event.daysPast; d++) {\n\t\t\teventFlags[-d] = i18n[\"today\"] + \" - \" + d + \" \" + (d == 1 ? i18n[\"day\"] : i18n[\"days\"]);\n\t\t}\n\t\tfor (let d = 1; d <= Event.daysFuture; d++) {\n\t\t\teventFlags[d] = i18n[\"today\"] + \" + \" + d + \" \" + (d == 1 ? i18n[\"day\"] : i18n[\"days\"]);\n\t\t}\n\n\t\tadapter.getChannelsOf(\"events\", (_err, eventObjs) => {\n\t\t\tif (eventObjs) {\n\t\t\t\tfor (let e = 0; e < eventObjs?.length; e++) {\n\t\t\t\t\tconst eventObj = eventObjs[e];\n\t\t\t\t\tconst evID: string = eventObj._id.split(\".\").pop() || \"\";\n\t\t\t\t\tif (this.events[evID]) {\n\t\t\t\t\t\tdelete allEventIDs[evID];\n\t\t\t\t\t\tadapter.getStatesAsync(eventObj._id + \".*\").then((states) => {\n\t\t\t\t\t\t\tif (states) {\n\t\t\t\t\t\t\t\tfor (const stateId in states) {\n\t\t\t\t\t\t\t\t\tif (!eventFlags[stateId.split(\".\").pop() || \"\"]) {\n\t\t\t\t\t\t\t\t\t\tadapter.log.info(\"delete flag \" + stateId);\n\t\t\t\t\t\t\t\t\t\t//this.delForeignObjectAsync(stateId);\n\t\t\t\t\t\t\t\t\t\tadapter.delObjectAsync(stateId);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const id in eventFlags) {\n\t\t\t\t\t\t\tthis.addEventFlagObject(eventObj._id + \".\" + id, eventFlags[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadapter.log.info(\"delete event state \" + eventObj._id);\n\t\t\t\t\t\t//this.delForeignObjectAsync(eventObj._id, { recursive: true });\n\t\t\t\t\t\tadapter.delObjectAsync(eventObj._id, { recursive: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const evID in allEventIDs) {\n\t\t\t\tadapter.log.info(\"create event \" + this.events[evID].name);\n\t\t\t\tadapter.createChannel(\"events\", evID, (_err, eventObj) => {\n\t\t\t\t\tif (eventObj) {\n\t\t\t\t\t\tadapter.extendObjectAsync(eventObj.id, {\n\t\t\t\t\t\t\tcommon: {\n\t\t\t\t\t\t\t\tname: this.events[evID].name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfor (const id in eventFlags) {\n\t\t\t\t\t\t\tthis.addEventFlagObject(eventObj.id + \".\" + id, eventFlags[id]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\taddEventFlagObject(id: string, name: string): void {\n\t\tadapter.setObjectNotExistsAsync(id, {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: name,\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"text\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tdef: \"\",\n\t\t\t\tdesc: id.endsWith(\"addEvent\") ? i18n[\"create new Event in calendar, see Readme\"] : i18n[\"starttime\"],\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\t}\n\n\tsyncFlags(): void {\n\t\tfor (const evID in this.events) {\n\t\t\tthis.events[evID].syncFlags();\n\t\t}\n\t}\n\n\tresetAll(): void {\n\t\tfor (const evID in this.events) {\n\t\t\tthis.events[evID].reset();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["RegExpEscape", "_err"]
}
