{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.3.0\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\n\nimport fs from \"fs\";\nimport { DavCalCalendar, initLib as calDavInit } from \"./lib/calDav\";\nimport { CalendarEvent, CalendarManager, localTimeZone } from \"./lib/calendarManager\";\nimport { EventManager } from \"./lib/eventManager\";\nimport { GoogleCalendar, initLib as googleInit } from \"./lib/google\";\n\nlet adapter: Webcal;\n\nconst i18n: Record<string, string> = {\n\tallDay: \"all day\",\n\tfrom: \"from\",\n\tuntil: \"until\",\n\tnow: \"now\",\n\ttoday: \"today\",\n\tday: \"day\",\n\tdays: \"days\",\n\tstarttime: \"starttime\",\n\taddEvent: \"add Event\",\n\tcreateNewEvent: \"create new Event in calendar, see Readme\",\n\tcouldNotFoundCalendar: \"could not found calendar for\",\n\tinvalidDate: \"invalid date\",\n\tsuccessfullyAdded: \"successfully added\",\n\tTomorrow: \"Tomorrow\",\n\tYesterday: \"Yesterday\",\n\txDaysAgo: \"%d days ago\",\n\tinXDays: \"in %d days\",\n\tdateOrPeriod: \"date or time period\",\n\tnextEvent: \"next Event\",\n\tweekDaysFull0: \"Sunday\",\n\tweekDaysFull1: \"Monday\",\n\tweekDaysFull2: \"Tuesday\",\n\tweekDaysFull3: \"Wednesday\",\n\tweekDaysFull4: \"Thursday\",\n\tweekDaysFull5: \"Friday\",\n\tweekDaysFull6: \"Saturday\",\n};\nclass Webcal extends utils.Adapter {\n\teventManager: EventManager;\n\tcalendarManager: CalendarManager;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"webcal\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\t// this.on(\"objectChange\", this.onObjectChange.bind(this));\n\t\tthis.on(\"message\", this.onMessage.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\n\t\tthis.eventManager = new EventManager(this, i18n);\n\t\tthis.calendarManager = new CalendarManager(this, i18n);\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\tawait this.initLocales();\n\t\tthis.eventManager.init(this.config);\n\t\tthis.calendarManager.init(this.config);\n\t\tcalDavInit(this, localTimeZone);\n\t\tgoogleInit(this, localTimeZone);\n\t\tif (this.config.calendars) {\n\t\t\tfor (let c = 0; c < this.config.calendars.length; c++) {\n\t\t\t\tthis.calendarManager.addCalendar(\n\t\t\t\t\tthis.createCalendarFromConfig(this.config.calendars[c]),\n\t\t\t\t\tthis.config.calendars[c].name,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.fetchCalendars();\n\t\t\tif (this.config.intervall > 0) {\n\t\t\t\tadapter.log.info(\"fetch calendar data all \" + this.config.intervall + \" minutes\");\n\t\t\t\tthis.setInterval(this.fetchCalendars.bind(this), this.config.intervall * 60000);\n\t\t\t}\n\t\t}\n\t\tthis.subscribeStates(\"fetchCal\");\n\t\tthis.subscribeStates(\"events.*.addEvent\");\n\t}\n\n\t/**\n\t * get data from all calendars and update Eventstates\n\t */\n\tfetchCalendars(): void {\n\t\tthis.eventManager.resetAll();\n\t\tthis.calendarManager.fetchCalendars().then((calEvents: CalendarEvent[]) => {\n\t\t\tfor (let i = 0; i < calEvents.length; i++) {\n\t\t\t\tcalEvents[i].searchForEvents(this.eventManager.events);\n\t\t\t}\n\t\t\tthis.eventManager.syncFlags();\n\t\t});\n\t}\n\n\tcreateCalendarFromConfig(calConfig: webcal.IConfigCalendar): webcal.ICalendarBase | null {\n\t\tif (calConfig.password && !calConfig.inactive) {\n\t\t\tif (calConfig.authMethod == \"google\") {\n\t\t\t\treturn new GoogleCalendar(calConfig);\n\t\t\t} else {\n\t\t\t\treturn new DavCalCalendar(calConfig);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t/**\n\t * create new Event in calendar\n\t * @param expression Syntax relDays[@calendar] | date|datetime[ - date|datetime][@calendar]\n\t * relDays - number of days after today\n\t * date/datetime must be parsable date\n\t * \\@calendar is the name of the calendar, if not use default (first defined calendar)\n\t * @returns {msg:string, errNo:number}\n\t */\n\tasync addEvent(expression: string, summary: string): Promise<{ statusText: string; errNo: number }> {\n\t\tadapter.log.debug(\"add event to calender: \" + expression);\n\t\tlet terms = expression.split(\"@\", 2);\n\t\texpression = \" \" + expression; // for formatting in msg\n\t\tconst calendarName =\n\t\t\tterms.length > 1 ? terms[1] : this.eventManager.events[summary]?.defaultCalendar || undefined;\n\t\tconst eventData: webcal.ICalendarEventData = {\n\t\t\tsummary: summary,\n\t\t\tstartDate: \"\",\n\t\t};\n\n\t\tif (terms[0].length < 4) {\n\t\t\tconst days = parseInt(terms[0], 10);\n\t\t\tif (!isNaN(days)) {\n\t\t\t\teventData.startDate = new Date(new Date().setDate(new Date().getDate() + days))\n\t\t\t\t\t.toISOString()\n\t\t\t\t\t.substring(0, 10);\n\t\t\t} else {\n\t\t\t\treturn { statusText: i18n.invalidDate + expression, errNo: 4 };\n\t\t\t}\n\t\t} else {\n\t\t\tterms = terms[0].split(\" - \");\n\t\t\tlet date = CalendarEvent.parseDateTime(terms[0]);\n\t\t\tif (!date.year) {\n\t\t\t\treturn { statusText: i18n.invalidDate + expression, errNo: 2 };\n\t\t\t}\n\t\t\teventData.startDate = date;\n\t\t\tif (terms[1]) {\n\t\t\t\tdate = CalendarEvent.parseDateTime(terms[1]);\n\t\t\t\tif (!date.year) {\n\t\t\t\t\treturn { statusText: i18n.invalidDate + expression, errNo: 3 };\n\t\t\t\t}\n\t\t\t\teventData.endDate = date;\n\t\t\t}\n\t\t}\n\t\tconst result = await this.calendarManager.addEvent(eventData, calendarName);\n\t\tif (result.ok) {\n\t\t\treturn { statusText: i18n.successfullyAdded + expression, errNo: 0 };\n\t\t} else {\n\t\t\treturn { statusText: result.message + \" \" + expression, errNo: 5 };\n\t\t}\n\t}\n\n\t/**\n\t * try to locale all internal used text\n\t */\n\tasync initLocales(): Promise<void> {\n\t\t// try to locale i18n\n\t\t//this.log.debug(\"load locales\");\n\t\tconst systemConfig = await this.getForeignObjectAsync(\"system.config\");\n\t\tif (systemConfig) {\n\t\t\tconst language = systemConfig.common.language;\n\t\t\tif (language) {\n\t\t\t\tconst data = fs.readFileSync(\"./admin/i18n/\" + language + \"/translations.json\");\n\t\t\t\tif (data) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst trans = JSON.parse(data.toString());\n\t\t\t\t\t\tfor (const key in i18n) {\n\t\t\t\t\t\t\tif (trans[i18n[key]]) {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\ti18n[key] = trans[i18n[key]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.log.warn(\"error on loading translation, use english\\n\" + error);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.warn(\"could not load translation, use english\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\tthis.eventManager.resetAll();\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (!state || state.ack) {\n\t\t\treturn;\n\t\t}\n\n\t\t// The state was changed\n\t\tthis.log.info(`state ${id} changed: ${state.val}`);\n\n\t\tconst stateId = id.split(\".\").pop();\n\t\tswitch (stateId) {\n\t\t\tcase \"fetchCal\":\n\t\t\t\tif (state.val) {\n\t\t\t\t\tthis.fetchCalendars();\n\t\t\t\t\tthis.setStateAsync(id, false, true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"addEvent\":\n\t\t\t\tif (state.val) {\n\t\t\t\t\tthis.getObjectAsync(id.substring(0, id.lastIndexOf(\".\"))).then((obj) => {\n\t\t\t\t\t\tthis.addEvent(state.val as string, obj?.common.name as string).then((result) => {\n\t\t\t\t\t\t\tthis.setStateAsync(id, result.statusText, true);\n\t\t\t\t\t\t\tthis.fetchCalendars();\n\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\tthis.setStateAsync(id, \"\", true);\n\t\t\t\t\t\t\t}, 60000);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\tprivate onMessage(obj: ioBroker.Message): void {\n\t\tthis.log.info(JSON.stringify(obj));\n\t\tif (typeof obj === \"object\") {\n\t\t\tif (obj.command === \"testCalendar\") {\n\t\t\t\t// Send response in callback if required\n\t\t\t\tif (obj.callback && obj.message) {\n\t\t\t\t\tconst calObj = this.createCalendarFromConfig((obj.message as any).calData);\n\t\t\t\t\tif (calObj) {\n\t\t\t\t\t\tconst error = calObj.loadEvents(\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\tnew Date(),\n\t\t\t\t\t\t\tnew Date(new Date().setDate(new Date().getDate() + 15)),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, { result: error }, obj.callback);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.sendTo(obj.from, obj.command, { result: \"success\" }, obj.callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendTo(obj.from, obj.command, { result: \"could not create Calendar\" }, obj.callback);\n\t\t\t\t}\n\t\t\t} else if (obj.command === \"getCalendars\") {\n\t\t\t\t// Send response in callback if required\n\t\t\t\tif (obj.callback) {\n\t\t\t\t\tconst calendars = [];\n\t\t\t\t\tfor (let c = 0; c < this.config.calendars.length; c++) {\n\t\t\t\t\t\tcalendars.push({ label: this.config.calendars[c].name, value: this.config.calendars[c].name });\n\t\t\t\t\t}\n\t\t\t\t\tthis.sendTo(obj.from, obj.command, calendars, obj.callback);\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendTo(obj.from, obj.command, [{ label: \"No calendar found\", value: \"\" }], obj.callback);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => (adapter = new Webcal(options));\n}\n// otherwise start the instance directly\nelse {\n\t(() => (adapter = new Webcal()))();\n}\n"],
  "mappings": "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",
  "names": ["calDavInit", "googleInit", "fs"]
}
